@using TempLoggerService.Models
<div id="body">
    <section class="featured">
        <div class="content-wrapper">
            <hgroup class="title">
                <h1>Welcome to TempLogger!</h1>
                <h2></h2>
            </hgroup>
            <p></p>
            <p></p>
        </div>
    </section>
    <section class="content-wrapper main-content clear-fix">
        <form action="" method="get">
            @Html.DropDownList("SelectDevice", (IEnumerable<SelectListItem>)ViewBag.devices)
        </form>
        <br />
        <script type="text/javascript">
            $("#SelectDevice").change(function () {
                window.location.href = "?id=" + $("#SelectDevice :selected").text()
            });
        </script>

        Data for device @ViewBag.devname<br />
        Current temperature: <span id="currenttemp"></span><br />
        Min temperature: <span id="mintemp"></span><br />
        Max temperature: <span id="maxtemp"></span><br />
        ΔT: <span id="deltaT"></span><br /><br />
        <canvas id="myChart" width="800" height="400"></canvas>
        
        <script type="text/javascript">
            var ctx = document.getElementById("myChart").getContext("2d");
            var chartdata = { labels: [], datasets: [{
                    label: "My First dataset",
                    fillColor: "rgba(220,220,220,0.2)",
                    strokeColor: "rgba(220,220,220,1)",
                    pointColor: "rgba(220,220,220,1)",
                    pointStrokeColor: "#fff",
                    pointHighlightFill: "#fff",
                    pointHighlightStroke: "rgba(220,220,220,1)",
                    data: []
                }]
            };
            
            $.getJSON("@Url.HttpRouteUrl("DeviceApi", new { controller = "Device", id = ViewBag.devname })", function(data) {
                $.getJSON("@Url.HttpRouteUrl("DefaultApi", new { controller = "Temperature", action= "GetLast24HourTemps" })/" + data, function (tempdata) {
                    for (var i = 0; i < tempdata.length; i++) {
                        chartdata.labels.push(tempdata[i].hour);
                        chartdata.datasets[0].data.push(tempdata[i].avgtemp);
                    }

                    var myLineChart = new Chart(ctx).Line(chartdata, { bezierCurve: false });

                    var min = tempdata.reduce(function(prev, curr) {
                        return prev.avgtemp < curr.avgtemp ? prev : curr;
                    });

                    var max = tempdata.reduce(function (prev, curr) {
                        return prev.avgtemp > curr.avgtemp ? prev : curr;
                    });

                    $("#mintemp").html(min.avgtemp + " @@ Hour " + min.hour);
                    $("#maxtemp").html(max.avgtemp + " @@ Hour " + max.hour);
                    $("#deltaT").html((max.avgtemp - min.avgtemp).toFixed(2));
                });

                $.getJSON("@Url.HttpRouteUrl("DefaultApi", new { controller = "Temperature", action = "GetLatestTemp" })/" + data, function(latesttemp) {
                    $("#currenttemp").html(latesttemp.temp + " @@ " + latesttemp.timestamp);
                });
            });
        </script>
    </section>
</div>
